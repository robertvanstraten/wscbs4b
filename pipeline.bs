// PIPELINE

import compute;
import visualise;


println("Add one hot encoded columns dataset...");

let test_og := new Data{ name := "titanic_test" };
let train := one_hot(new Data{ name := "titanic_train" });
let test  := one_hot(test_og);

println("Remove leaky/useless columns dataset...");
train := drop_columns(train);
test  := drop_columns(test);

println("Impute median columns dataset...");
train := impute_median(train);
test  := impute_median(test);

println("Standardise columns dataset...");
train := standardize(train);
test  := standardize(test);

println("Training model...");
let model := train_model(train);

println("Predicting...");
let submission := predict(model, test);

commit_result("kaggle_submission", submission);

println("Combining test and submission...");
let full_test := combine(submission, test_og);

println("Plot gender bar...");
let plot_gender := plot_bar_gender(full_test);

println("Plot fare histogram...");
let plot_fare := plot_hist_fare(full_test);

println("Plot age histogram...");
let plot_age := plot_hist_age(full_test);

println("Plot class gender heatmap...");
let plot_class_gender := heat_class_gender(full_test);

println("Generate plot interface...");
let interface := generate_interface(plot_gender, plot_fare, plot_age, plot_class_gender);
commit_result("titanic_interface", interface);